camera:
  - name: Front Door Last Person
    platform: mqtt
    topic: frigate/front_door_exterior/person/snapshot
  - name: Garage Last Person
    platform: mqtt
    topic: frigate/garage/person/snapshot

binary_sensor:
  - name: Camera Front Door Person
    platform: mqtt
    state_topic: "frigate/front_door_exterior/person"
    device_class: motion
    availability_topic: "frigate/available"
  - name: Camera Garage Person
    platform: mqtt
    state_topic: "frigate/garage/person"
    device_class: motion
    availability_topic: "frigate/available"

automation:
  - alias: Alert me if a person is detected while armed away
    trigger:
      platform: state
      entity_id: binary_sensor.camera_garage_person
      from: "off"
      to: "on"
    condition:
      condition: or
      conditions:
        - condition: state
          entity_id: alarm_control_panel.home
          state: armed_away
        - condition: state
          entity_id: alarm_control_panel.home
          state: armed_home
    action:
      - service: notify.telegram_household
        data:
          message: "A person was detected in the garage."
          # data:
          #   photo:
          #     - url: http://localhost:5500/<camera_name>/person/best.jpg
          #       caption: A person was detected.

sensor:
  # - platform: rest
  #   name: Frigate Debug
  #   resource: http://192.168.1.25:5500/debug/stats
  #   scan_interval: 5
  #   json_attributes:
  #     - coral
  #   value_template: "OK"
  - platform: template
    sensors:
      # back_fps:
      #   value_template: '{{ states.sensor.frigate_debug.attributes["back"]["fps"] }}'
      #   unit_of_measurement: "FPS"
      # back_skipped_fps:
      #   value_template: '{{ states.sensor.frigate_debug.attributes["back"]["skipped_fps"] }}'
      #   unit_of_measurement: "FPS"
      # back_detection_fps:
      #   value_template: '{{ states.sensor.frigate_debug.attributes["back"]["detection_fps"] }}'
      #   unit_of_measurement: "FPS"
      frigate_coral_fps:
        value_template: '{{ states.sensor.frigate_debug.attributes["coral"]["fps"] }}'
        unit_of_measurement: "fps"
      frigate_coral_inference_speed:
        value_template: '{{ states.sensor.frigate_debug.attributes["coral"]["inference_speed"] }}'
        unit_of_measurement: "ms"
      frigate_coral_detection_queue:
        value_template: '{{ states.sensor.frigate_debug.attributes["coral"]["detection_queue"] }}'
        unit_of_measurement: "frames"
